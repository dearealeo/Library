---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { readdir } from 'node:fs/promises';
import { join } from 'node:path';

export async function getStaticPaths() {
  const currentYear = new Date().getFullYear();
  const startYear = 2022;
  const paths = [];

  const monthNames = [
    "January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
  ];

  for (let year = startYear; year <= currentYear; year++) {
    for (let month = 1; month <= 12; month++) {
      const monthStr = month.toString().padStart(2, '0');

      // Get news files for this month
      let newsFiles = [];
      try {
        const newsPath = join(process.cwd(), 'public', 'news', year.toString());
        const allFiles = await readdir(newsPath);
        newsFiles = allFiles
          .filter(file => file.startsWith(`${year}${monthStr}`) && file.endsWith('.md'))
          .sort()
          .reverse(); // Most recent first
      } catch (error) {
        // Directory might not exist
      }

      paths.push({
        params: {
          year: year.toString(),
          month: monthStr
        },
        props: {
          year,
          month: monthStr,
          monthName: monthNames[month - 1],
          newsFiles
        }
      });
    }
  }

  return paths;
}

const { year, month, monthName, newsFiles } = Astro.props;
---

<BaseLayout title={`News ${monthName} ${year}`}>
  <div class="content">
    <p><a href={`/Library/news/${year}/`}>Back to {year}</a></p>
    <h1>News {monthName} {year}</h1>

    {newsFiles.length > 0 ? (
      <div class="news-list">
        {newsFiles.map(file => {
          const dateStr = file.replace('.md', '');
          const day = dateStr.slice(6, 8);
          const displayDate = `${year}-${month}-${day}`;
          const fileUrl = `/Library/news/${year}/${file}`;
          return (
            <div class="news-item">
              <span class="news-date">{displayDate}</span>
              <a href={fileUrl}>新闻联播 {displayDate}</a>
            </div>
          );
        })}
      </div>
    ) : (
      <div class="placeholder">
        <p>No news articles found for {monthName} {year}.</p>
      </div>
    )}
  </div>
</BaseLayout>

<style>
  .content {
    max-width: 900px;
    margin: 0 auto;
    padding: 20px;
  }

  .content p:first-child {
    margin-bottom: 30px;
  }

  .content a {
    text-decoration: none;
    color: var(--color-secondary);
    font-weight: 500;
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .content a:hover {
    color: var(--color-primary);
    transform: scale(1.1);
  }

  .placeholder {
    padding: 40px 20px;
    text-align: center;
    color: var(--color-secondary);
    background: var(--color-bg);
    border-radius: 8px;
    border: 1px solid var(--color-border);
  }

  h1 {
    color: var(--color-primary);
    margin-bottom: 30px;
  }

  .news-list {
    display: grid;
    gap: 12px;
  }

  .news-item {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 12px 15px;
    border-radius: 5px;
    border: 1px solid var(--color-border);
    transition: all 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .news-item:hover {
    border-color: var(--color-secondary);
    background: var(--color-badge-bg);
    transform: translateY(-1px);
  }

  .news-date {
    font-family: 'SF Mono', 'Monaco', 'Inconsolata', 'Roboto Mono', monospace;
    font-size: 0.9rem;
    color: var(--color-secondary);
    min-width: 100px;
  }

  .news-item a {
    text-decoration: none;
    color: var(--color-primary);
    font-weight: 500;
    flex: 1;
  }

  .news-item a:hover {
    color: var(--color-secondary);
    transform: none;
  }
</style>
